class DatabaseConnection(object):
    def __init__(self, db_ip, port, user_name, password):
        """ Database Schema : db_name - table_name - column_name
        userDatabase {
            kakao_unique_id-userInfo {  # userInfoTable
                                        # table name length limit is 64
                                        # 64 >= 40 +1+ 8(up to 10) = 49(up to 51)
                                        # # 40 : user id length limit
                                               ::: len("kakao_0000000000") == 16
                                               ::: len("naver_00000000") == 14
                                        # # 8 : table name length limit
                AESIV : VARCHAR(50) | aes iv  # required
                legalName : VARCHAR(100) | user's legal name, not nickname  # optional
                email : VARCHAR(200) | username@domain.com, not untactorder email  # optional
                phone : VARCHAR(100) | phone number  # required
                age : TINYINT | age  # optional but required when ordering products with age restrictions
                gender : TINYINT | 1=male, 2=female, 3=neutral, 4=etc, 0=none  # optional
                lastAccessDate : VARCHAR(30) | 2022-01-01  # for legal process
                                                           # If the user has not used the service for a year,
                                                             the user information is should be deleted.
                                                           # 30 days before deleting user information,
                                                             the user should be notified of the fact
                                                             that user info is scheduled to be deleted.
            }
            kakao_unique_id-alterHis {  # userDatabaseAlterHistoryTable
                                        # only record database user info update and delete (except last access date)
                alterDateTime : VARCHAR(30) | 2022-01-01_12:00:00:000000
                alterType : TINYINT | 1=update, 2=delete
                alterLogMessage : VARCHAR(MARIADB_VARCHAR_MAX) | update or delete log message  # be careful of length
            }
            kakao_unique_id-fcmToken {  # fcmTokenTable, firebase cloud messaging token
                                        # ref: https://firebase.google.com/docs/cloud-messaging/manage-tokens
                timeStamp : VARCHAR(30) | 2020-01-01
                token : VARCHAR(4096) | firebase cloud messaging token
            }
            kakao_unique_id-orderHis {  # orderHistoryTable
                id : BIGINT PRIMARY KEY autoincrement | index  # index check required
                businessName : VARCHAR(100) | business(store) name
                totalPrice : INT | total price
                dbIpAddress : VARCHAR(100) | store database ip address
                historyStoragePointer : VARCHAR(MARIADB_OBJ_NAME_LENGTH_LIMIT)
                                        | ISO4217-business_regi_number-pos_number-table_number-20220101_120000000000
            }
        }"""
        """
        storeDatabase {
            kakao_unique_id-pos_number-storeInfo {  # storeInfoTable
                                                    # 64 >= 40 +1+ 3 +1+ 8(up to 10) = 53(up to 55)
                                                    # # 40 : user id length limit
                                                           ::: len("kakao_0000000000") == 16
                                                           ::: len("naver_00000000") == 14
                                                    # # 3 : pos number length limit (0 ~ 999)
                                                    # # 9 : table name length limit
                ISO4217 : VARCHAR(3) | ISO 4217 currency code  # required
                businessRegistrationNumber : VARCHAR(27) | business registration (license) number  # required
                --------------------------------------------------------------------------------
                publicIp : VARCHAR(100) | public ip address  # required
                wifiPassword : VARCHAR(MARIADB_VARCHAR_MAX) | wifi password  # required
                gatewayIp : VARCHAR(100) | gateway ip address  # required
                gatewayMac : VARCHAR(200) | gateway mac address  # required
                posIp : VARCHAR(100) | pos server ip address  # required
                posMac : VARCHAR(200) | pos server mac address  # required
                posPort : INT | pos port number  # required
                --------------------------------------------------------------------------------
                businessName : VARCHAR(100) | business name  # required
                businessAddress : VARCHAR(1000) | business address  # required
                businessZipCode : INT | business zip code  # required
                businessPhoneNumber : VARCHAR(100) | business phone number  # required
                businessDescription : VARCHAR(MARIADB_VARCHAR_MAX) | business description  # optional
                businessProfileImage : VARCHAR(MARIADB_VARCHAR_MAX) | business profile image  # optional
                businessEmail : VARCHAR(1000) | business email  # optional
                businessWebsite : VARCHAR(10000) | business website  # optional
                businessOpenTime : VARCHAR(10000) | business open time  # optional
                businessCloseTime : VARCHAR(10000) | business close time  # optional
                businessCategory : VARCHAR(1000) | business category  # required
                businessSubCategory : VARCHAR(2000) | business sub category  # optional
            }
            kakao_unique_id-pos_number-items {  # storeItemListTable
                id : INT PRIMARY KEY autoincrement | index
                name : VARCHAR(300) | item name  # required
                price : INT | item price  # required
                type : VARCHAR(100) | item type  # required
                photoUrl : VARCHAR(MARIADB_VARCHAR_MAX) | item photo url  # optional
                description : VARCHAR(MARIADB_VARCHAR_MAX) | item description  # optional
                ingredient : VARCHAR(MARIADB_VARCHAR_MAX) | item ingredient  # optional
                hashtag : VARCHAR(MARIADB_VARCHAR_MAX) | item hashtag  # optional
                pinned : BOOLEAN | whether to recommend or not.  # optional
                available : BOOLEAN | whether item is deprecated  # required
            }
            kakao_unique_id-pos_number-tableAlias {  # storeTableStringTable
                id : INT autoincrement | index
                tableString : VARCHAR(10) PRIMARY KEY | table string  # required
            }
            kakao_unique_id-pos_number-fcmToken {  # fcmTokenTable, firebase cloud messaging token
                                                   # ref: https://firebase.google.com/docs/cloud-messaging/manage-tokens
                timeStamp : VARCHAR(30) | 2020-01-01
                token : VARCHAR(4096) | firebase cloud messaging token
            }
            kakao_unique_id-pos_number-orderToken {  # storeOrderTokenTable
                orderToken : VARCHAR(128) PRIMARY KEY UNIQUE KEY | user order token for pos_number
                userEmail : VARCHAR(141) | customer id + db ip  # one customer can have only one token per pos one time.
                            PRIMARY KEY                         # token will be deleted after order is completed.
                                                                # To prevent errors, tokens should not expire
                                                                  or be deleted before the order is completed.
                tableNumber : INT PRIMARY KEY | table number
            }
        }"""
        """
        orderHistoryDatabase {  # Order history must be located on the same server as the store account's.
            ISO4217-business_registration_number-pos_number-table_number-20220101_120000000000 {
                                                            # ISO4217 + store info + order datetime code as history name
                                                            # ISO4217 is monetary unit code - ex : USD, EUR, KRW, etc.
                                                            # # https://en.wikipedia.org/wiki/ISO_4217
                                                            # length limit 64 >= 3 +1+ 27 +1+ 3 +1+ 4 +1+ 21 = 62
                                                            # # 3 : ISO4217 code length limit (ISO4217)
                                                            # # 27 : business registration number length limit
                                                            # # 3 : pos number length limit (0 ~ 999)
                                                            # # 4 : table number length limit (0 ~ 9999)
                                                            # # 21 : datetime length limit (YYYYMMDD_HHMMSSSSSSSS)
                id : INT PRIMARY KEY autoincrement | index
                firebaseUid : VARCHAR(128) | user id, 1 <= uid <= 128
                orderStatus : TINYINT | 0(default)=ordered, 1=paid, 2=cancelled, 3=delivered, 4=returned
                                        # for future use
                paymentMethod : TINYINT | 0(default)=etc, 1=cash, 2=card, 3=kakao_pay, 4=naver_pay,
                                          5=payco, 6=zero_pay ...
                itemName : VARCHAR(300) | item name  # be careful of the size
                itemPrice : INT | item price
                itemQuantity : INT | item quantity
            }  # total price can be calculated by sum_by_rows(menuPrice*menuQuantity)
        }"""


class ExclusiveDatabaseConnection(object):
    def __init__(self, host, port, user_name, password, ssl_ca):
        """ Database Schema : db_name - table_name - column_name
        exclusiveDatabase {
            registeredPhoneNumberList {
                phoneNumber : VARCHAR(100) PRIMARY KEY | phone number  # to prevent duplicate phone numbers
                                                                         from being registered
                userId : VARCHAR(40) | user id - (40 : user id length limit)
                dbIpAddress : VARCHAR(100) | store database ip address
            }
            registeredBusinessLicenseNumberList {
                identifier : VARCHAR(31) PRIMARY KEY                 # to prevent duplicate license numbers
                             | ISO4217-business_registration_number    from being registered
                                                                     # one identifier can be registered by one user
                userId : VARCHAR(40) | user id - (40 : user id length limit)
                dbIpAddress : VARCHAR(100) | store database ip address
            }
        }"""
